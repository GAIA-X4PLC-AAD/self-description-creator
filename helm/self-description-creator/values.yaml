# Default values for metadatasearch-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

container:
  main:
    ports:
      - name: http
        port: 8080
        protocol: TCP
    env:
      CLAIM_FILES_DIR: "/mnt/data" # See reference to `volumeMounts.mountPath` below
      CLAIM_FILES_CLEANUP_MAX_FILE_AGE_DAYS: 5
      CREDENTIAL_ISSUER_PRIVATE_KEY_PEM_PATH: "/etc/secret-volume/credential_issuer_private_key_pem"
    probes:
      readiness:
        path: /health
        port: 8080
      liveness:
        path: /health
        port: 8080
      startup:
        path: /health
        port: 8080

# Note: Each service ports definition must link to a container.main.ports definition
service:
  type: ClusterIP
  ingressPort: 80 # Points to one of the service ports below
  ports:
    - name: http
      port: 80
      targetPort: http # Link to a related definition of container.main.ports.name or container.main.ports.port
      protocol: TCP

secrets:
  FEDERATED_CATALOGUE_USER_NAME:
    secretName: self-description-creator-secret
    secretKey: federated_catalogue_user_name
  FEDERATED_CATALOGUE_USER_PASSWORD:
    secretName: self-description-creator-secret
    secretKey: federated_catalogue_user_password
  KEYCLOAK_CLIENT_SECRET:
    secretName: self-description-creator-secret
    secretKey: keycloak_client_secret

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
   requests:
     cpu: 50m
     memory: 100M

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

federatedCatalogue: # Keycloak User to access the GXFS Federated Catalogue
  user:
    name: ""
    password: ""
keycloak:
  realm:
    client_secret: "" # Client secret to access Keycloak
credentialIssuer:
  privateKeyPem: ""

volume:
  name: data
  claimName: self-description-creator-file-share
  storageClassName: ""
  storageSize: 1Gi

volumeMounts:
  name: data
  mountPath: /mnt/data